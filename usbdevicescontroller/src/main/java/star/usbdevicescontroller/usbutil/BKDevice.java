package star.usbdevicescontroller.usbutil;import android.hardware.usb.UsbConstants;import android.hardware.usb.UsbDeviceConnection;import android.hardware.usb.UsbEndpoint;import android.hardware.usb.UsbInterface;import java.io.BufferedReader;import java.io.BufferedWriter;/* This class represents a USB device that supports the adb protocol. */public class BKDevice {// private static final int TIMEOUT = 3000;    //    private final UsbDeviceConnection usbDeviceConnection;    private final BufferedReader bufferedReader;    private final BufferedWriter bufferedWriter;    public BKDevice(UsbDeviceConnection usbDeviceConnection, UsbInterface usbInterface) {//        Preconditions.checkState(usbDeviceConnection.claimInterface( usbInterface, true));//        this.usbDeviceConnection = usbDeviceConnection;        UsbEndpoint usbEndPointOut = null;        UsbEndpoint usbEndpointIn = null;        // look for our bulk endpoints        for (int index = 0; index < usbInterface.getEndpointCount(); index++) {            UsbEndpoint endpoint = usbInterface.getEndpoint(index);            if (endpoint.getType() == UsbConstants.USB_ENDPOINT_XFER_BULK) {                if (endpoint.getDirection() == UsbConstants.USB_DIR_OUT) {                    usbEndPointOut = endpoint;                } else if (endpoint.getDirection() == UsbConstants.USB_DIR_IN) {                    usbEndpointIn = endpoint;                }            }        }        if (usbEndPointOut == null || usbEndpointIn == null) {            throw new IllegalArgumentException("Not all endpoints found.");        }        BKReader bkReader = new BKReader(usbDeviceConnection, usbEndpointIn);        BKWriter bkWriter = new BKWriter(usbDeviceConnection, usbEndPointOut);        bufferedReader = new BufferedReader(bkReader);        bufferedWriter = new BufferedWriter(bkWriter);    }    public BufferedReader getBufferedReader() {        return bufferedReader;    }    public BufferedWriter getBufferedWriter() {        return bufferedWriter;    }}